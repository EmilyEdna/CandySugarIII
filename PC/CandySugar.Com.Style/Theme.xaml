<ResourceDictionary
    x:Class="CandySugar.Com.Style.Theme"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:lib="http://lib.candy.com"
    xmlns:uc="http://ctrl.candy.com">

    <uc:NullConverter x:Key="NullConverter" />

    <FontFamily x:Key="FontStyle">/CandySugar.Com.Style;component/Fonts/#HappyZcool-2016</FontFamily>
    <FontFamily x:Key="Thin">/CandySugar.Com.Style;component/Fonts/#Font Awesome 6 Pro Regular</FontFamily>
    <FontFamily x:Key="Solid">/CandySugar.Com.Style;component/Fonts/#Font Awesome 6 Pro Thin</FontFamily>
    <FontFamily x:Key="Regular">/CandySugar.Com.Style;component/Fonts/#Font Awesome 6 Pro Solid</FontFamily>

    <!--#region Anime-->

    <Storyboard x:Key="BackgroudAnimeFrame">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImageBackgroud" Storyboard.TargetProperty="Opacity">
            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.5" />
            <EasingDoubleKeyFrame KeyTime="1" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="ObjectFontAnimeFrame">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="-1" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.800" Value="0" />
            <EasingDoubleKeyFrame KeyTime="0:0:1.200" Value="-1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="GradientAnimeFrame">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="GradientBorder" Storyboard.TargetProperty="Opacity">
            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="GradientBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.200" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <!--#endregion-->

    <!--#region Window-->

    <Style x:Key="CandyDefaultWindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource FontStyle}" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border BorderBrush="#e63995" BorderThickness="1.5">
                        <Border.Style>
                            <Style TargetType="Border">
                                <EventSetter Event="MouseLeftButtonDown" Handler="MoveEvent" />
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Grid
                                x:Name="ImageBackgroud"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                                <Grid.Background>
                                    <ImageBrush ImageSource="/CandySugar.Com.Style;component/Resources/Backgroud.jpg" />
                                </Grid.Background>
                            </Grid>
                            <Grid>
                                <Rectangle
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Fill="#e6cfe6"
                                    Opacity=".4" />
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Border
                                        Width="{TemplateBinding Width}"
                                        Height="35"
                                        VerticalAlignment="Top"
                                        Background="DimGray"
                                        Opacity=".7">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width=".1*" />
                                                <ColumnDefinition Width=".1*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <WrapPanel
                                                Margin="10,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center">
                                                <TextBlock
                                                    FontSize="15"
                                                    Foreground="#fff0f5"
                                                    Text="{TemplateBinding Title}" />
                                            </WrapPanel>
                                            <WrapPanel Grid.Column="1" HorizontalAlignment="Right">
                                                <Button
                                                    Width="32"
                                                    Height="30"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    Content="{x:Static lib:FontIcon.MagnifyingGlass}"
                                                    FontFamily="{DynamicResource Thin}"
                                                    Foreground="#fff0f5">
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Setter Property="Template" Value="{DynamicResource CandyDefaultWindowButtonStyle}" />
                                                            <EventSetter Event="Click" Handler="SearchEvent" />
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </WrapPanel>
                                            <WrapPanel
                                                Grid.Column="2"
                                                Margin="0,0,2.5,0"
                                                HorizontalAlignment="Right">
                                                <Button
                                                    Width="30"
                                                    Height="30"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    Content="{x:Static lib:FontIcon.Minus}"
                                                    FontFamily="{DynamicResource Thin}"
                                                    Foreground="#fff0f5">
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Setter Property="Template" Value="{DynamicResource CandyDefaultWindowButtonStyle}" />
                                                            <EventSetter Event="Click" Handler="MinEvent" />
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <Button
                                                    Width="30"
                                                    Height="30"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    Content="{x:Static lib:FontIcon.Square}"
                                                    FontFamily="{DynamicResource Thin}"
                                                    Foreground="#fff0f5">
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Setter Property="Template" Value="{DynamicResource CandyDefaultWindowButtonStyle}" />
                                                            <EventSetter Event="Click" Handler="MaxEvent" />
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <Button
                                                    Width="30"
                                                    Height="30"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    Content="{x:Static lib:FontIcon.PowerOff}"
                                                    FontFamily="{DynamicResource Thin}"
                                                    Foreground="#fff0f5">
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Setter Property="Template" Value="{DynamicResource CandyDefaultWindowButtonStyle}" />
                                                            <EventSetter Event="Click" Handler="CloseEvent" />
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </WrapPanel>
                                        </Grid>
                                    </Border>
                                    <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CandyDefaultWindowButtonStyle" TargetType="Button">
        <Border
            x:Name="MyBackgroundElement"
            BorderBrush="Transparent"
            BorderThickness="0">
            <ContentPresenter
                x:Name="ButtonContentPresenter"
                HorizontalAlignment="Center"
                VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MyBackgroundElement" Property="Background" Value="SkyBlue" />
                <Setter TargetName="MyBackgroundElement" Property="Opacity" Value="0.8" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CandyDefaultNotifyWindowStyle" TargetType="Window">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border BorderBrush="#e63995" BorderThickness="1.5">
                        <Grid>
                            <Rectangle
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="#faf0e6"
                                Opacity=".3" />
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CandyDefaultSettingWindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource FontStyle}" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border BorderBrush="#e63995" BorderThickness="1.5">
                        <Border.Style>
                            <Style TargetType="Border">
                                <EventSetter Event="MouseLeftButtonDown" Handler="MoveEvent" />
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Rectangle
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="#e6cfe6"
                                Opacity=".4" />
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Button-->

    <Style x:Key="CandyFloatButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="X1"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="25">
                        <Border.Background>
                            <SolidColorBrush Opacity=".25" Color="Pink" />
                        </Border.Background>
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="10"
                                ShadowDepth="0"
                                Color="WhiteSmoke" />
                        </Border.Effect>
                        <Border
                            x:Name="X2"
                            Margin="5"
                            CornerRadius="25">
                            <Border.Background>
                                <SolidColorBrush Opacity=".25" Color="Ivory" />
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    ShadowDepth="0"
                                    Color="Khaki" />
                            </Border.Effect>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="{StaticResource Thin}"
                                FontSize="18"
                                Foreground="Black"
                                RenderTransformOrigin="0.5,0.5"
                                Text="{x:Static lib:FontIcon.Bars}">
                                <TextBlock.RenderTransform>
                                    <TransformGroup>
                                        <TransformCollection>
                                            <ScaleTransform />
                                        </TransformCollection>
                                    </TransformGroup>
                                </TextBlock.RenderTransform>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard Name="StartAnimation" Storyboard="{DynamicResource ObjectFontAnimeFrame}" />
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <RemoveStoryboard BeginStoryboardName="StartAnimation" />
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="X1" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        ShadowDepth="0"
                                        Color="MediumVioletRed" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="X2" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        ShadowDepth="0"
                                        Color="Gold" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="X1" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        ShadowDepth="0"
                                        Color="#FF9999" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="X2" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        ShadowDepth="0"
                                        Color="MediumVioletRed" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CandyFloatChildButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="X1"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="25">
                        <Border.Background>
                            <SolidColorBrush Opacity=".25" Color="Pink" />
                        </Border.Background>
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="10"
                                ShadowDepth="0"
                                Color="WhiteSmoke" />
                        </Border.Effect>
                        <Border
                            x:Name="X2"
                            Margin="5"
                            CornerRadius="25">
                            <Border.Background>
                                <SolidColorBrush Opacity=".25" Color="Ivory" />
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    ShadowDepth="0"
                                    Color="Khaki" />
                            </Border.Effect>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="{StaticResource Thin}"
                                FontSize="18"
                                Foreground="Black"
                                RenderTransformOrigin="0.5,0.5"
                                Text="{x:Static lib:FontIcon.MagnifyingGlassPlus}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="X1" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        ShadowDepth="0"
                                        Color="MediumVioletRed" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="X2" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        ShadowDepth="0"
                                        Color="Gold" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="X1" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        ShadowDepth="0"
                                        Color="#FF9999" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="X2" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        ShadowDepth="0"
                                        Color="MediumVioletRed" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CandyButtonStyle" TargetType="uc:CandyButton">
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="35" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="uc:CandyButton">
                    <uc:CandyBorder
                        x:Name="Element"
                        BorderBrush="Gray"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderType="{TemplateBinding ButtonType}">
                        <Border.Background>
                            <SolidColorBrush Opacity=".6" Color=" DeepSkyBlue" />
                        </Border.Background>
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </uc:CandyBorder>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding BorderType, ElementName=Element}" Value="{x:Static lib:EButton.Primary}">
                            <Setter TargetName="Element" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".6" Color="DeepSkyBlue" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding BorderType, ElementName=Element}" Value="{x:Static lib:EButton.Info}">
                            <Setter TargetName="Element" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".6" Color="SkyBlue" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding BorderType, ElementName=Element}" Value="{x:Static lib:EButton.Success}">
                            <Setter TargetName="Element" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".6" Color="LightGreen" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding BorderType, ElementName=Element}" Value="{x:Static lib:EButton.Warning}">
                            <Setter TargetName="Element" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".6" Color="Tomato" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding BorderType, ElementName=Element}" Value="{x:Static lib:EButton.Error}">
                            <Setter TargetName="Element" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".6" Color="DarkRed" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Element" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".6" Color="HotPink" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Element" Property="BorderBrush" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Element" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".6" Color="HotPink" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CandyFontButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource Thin}" />
        <Setter Property="Foreground" Value="#fff0f5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="MyBackgroundElement"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                        <ContentPresenter
                            x:Name="ButtonContentPresenter"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MyBackgroundElement" Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="#ffb3bf" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MyBackgroundElement" Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="#ffb3bf" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CandyTextBlockButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#fdf5e6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="MyBackgroundElement"
                        Margin="1,2"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                        <TextBlock
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Content}"
                            TextTrimming="CharacterEllipsis" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MyBackgroundElement" Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="#ffb3bf" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MyBackgroundElement" Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="#ffb3bf" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region  ListBox-->
    <Style x:Key="CandyListBoxStyle" TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource CandyListBoxItemStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel
                        Margin="5"
                        HorizontalAlignment="Center"
                        FocusVisualStyle="{x:Null}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CandyListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleListBox" TargetType="ListBox">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ToggleListBoxItem}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="50" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleListBoxItem" TargetType="uc:CandyListboxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#FDF5E6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UnderLine" Value="True" />
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="14,6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="uc:CandyListboxItem">
                    <Border
                        Margin="{TemplateBinding Margin}"
                        Background="#40B3B3B3"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="{TemplateBinding ClipToBounds}">
                        <Grid>
                            <Border x:Name="BorderElement" Background="Transparent" />
                            <WrapPanel
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Vertical">
                                <TextBlock
                                    Padding="50,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="20"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}" />
                                <Border
                                    x:Name="GradientBorder"
                                    Width="80"
                                    Height="3"
                                    uc:ExtenAttach.Visibility="{TemplateBinding UnderLine}"
                                    Background="#ff8099"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    Opacity="0"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </WrapPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BorderElement" Property="Background" Value="#7080CBCC" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="GradientAnimeMoveKey" Storyboard="{DynamicResource GradientAnimeFrame}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="GradientAnimeMoveKey" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderElement" Property="Background" Value="#70E0E0DB" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="BorderElement" Property="Background" Value="#7080CBCC" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Border-->
    <Style x:Key="CandyBorderStyle" TargetType="uc:CandyBorder">
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding BorderType, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Static lib:EButton.Primary}">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Opacity=".6" Color="DeepSkyBlue" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding BorderType, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Static lib:EButton.Info}">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Opacity=".6" Color="SkyBlue" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding BorderType, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Static lib:EButton.Success}">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Opacity=".6" Color="LightGreen" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding BorderType, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Static lib:EButton.Warning}">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Opacity=".6" Color="Tomato" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding BorderType, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Static lib:EButton.Error}">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Opacity=".6" Color="DarkRed" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region ContextMenu-->
    <Style x:Key="CandyContextMenuStyle" TargetType="ContextMenu">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="#faf0e6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="hc:MenuAttach.PopupVerticalOffset" Value="-9" />
        <Setter Property="hc:MenuAttach.PopupHorizontalOffset" Value="10" />
        <Setter Property="hc:MenuAttach.ItemPadding" Value="0,5" />
        <Setter Property="hc:BorderElement.CornerRadius" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border
                        MaxHeight="{TemplateBinding MaxHeight}"
                        Margin="8"
                        Background="{TemplateBinding Background}"
                        BorderBrush="#e63995"
                        BorderThickness="1"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <ScrollViewer Margin="{TemplateBinding Padding}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CandyMenuItemStyle" TargetType="MenuItem">
        <Setter Property="FontFamily" Value="{DynamicResource FontStyle}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0,5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="hc:ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="hc:BorderElement.CornerRadius" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <Border
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Margin="15,8"
                                ContentSource="Header"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#afdfe4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TextBox-->
    <Style x:Key="CandyTextboxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="600" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderBrush="#fdf5e6" BorderThickness="0,0,0,1">
                        <Grid>
                            <Rectangle
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="#401e90ff"
                                Opacity=".5" />
                            <TextBlock
                                x:Name="PlaceHolder"
                                Margin="6,2"
                                VerticalAlignment="Center"
                                FontSize="18"
                                Foreground="#fafad2"
                                Text="{TemplateBinding Tag}"
                                Visibility="{Binding Text, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullConverter}, RelativeSource={RelativeSource AncestorType=TextBox}, Mode=TwoWay}" />
                            <TextBox
                                x:Name="TextContent"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Foreground="#fdf5e6"
                                Text="{Binding Text, RelativeSource={RelativeSource AncestorType=TextBox}, Mode=TwoWay}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="TextContent" Property="IsFocused" Value="True">
                            <Setter TargetName="PlaceHolder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>
